#!/usr/bin/env bash

RED="\033[0;31m"
YELLOW="\033[0;33m"
GREEN="\033[0;32m"
OCHRE="\033[38;5;95m"
BLUE="\033[0;34m"
WHITE="\033[0;37m"
RESET="\033[0m"

logn()  { printf -- "--> %s " "$*"; }
logk()  { echo -e "${GREEN}âœ”${RESET}"; }

logn 'Turning on vim syntax highlighting...'
grep -q -F 'syntax on' $HOME/.vimrc || echo 'syntax on' >> $HOME/.vimrc
grep -q -F 'set tabstop=2' $HOME/.vimrc || echo 'set tabstop=2' >> $HOME/.vimrc
grep -q -F 'set shiftwidth=2' $HOME/.vimrc || echo 'set shiftwidth=2' >> $HOME/.vimrc
grep -q -F 'set expandtab' $HOME/.vimrc || echo 'set expandtab' >> $HOME/.vimrc
logk

logn 'Installing vim-airline vim plugin...'

if [ ! -d "$HOME/.vim/pack/plugins/start/vim-airline/" ]; then
  git clone https://github.com/vim-airline/vim-airline.git $HOME/.vim/pack/plugins/start/vim-airline
  vim -u NONE -c "helptags $HOME/.vim/pack/plugins/start/vim-airline/doc" -c -q
fi

logk

logn 'Installing NERD_tree vim plugin...'

if [ ! -d "$HOME/.vim/pack/plugins/start/NERD_tree/" ]; then
  curl -o /tmp/NERD_tree.zip http://www.vim.org/scripts/download_script.php?src_id=23731
  unzip -q /tmp/NERD_tree.zip -d $HOME/.vim/pack/plugins/start/NERD_tree/
  rm /tmp/NERD_TREE.zip
  vim -u NONE -c "helptags $HOME/.vim/pack/plugins/start/NERD_tree/doc" -c -q
fi

logk

logn 'Installing vim-fugitive plugin...'
if [ ! -d "$HOME/.vim/pack/plugins/start/vim-fugitive/" ]; then
  git clone git@github.com:tpope/vim-fugitive.git $HOME/.vim/pack/plugins/start/vim-fugitive
  vim -u NONE -c "helptags $HOME/.vim/pack/plugins/start/vim-fugitive/doc" -c -q
fi
logk

logn 'Installing vim-terraform plugin...'
if [ ! -d "$HOME/.vim/pack/plugins/start/vim-terraform/" ]; then
  git clone git@github.com:tpope/vim-terraform.git $HOME/.vim/pack/plugins/start/vim-terraform
  vim -u NONE -c "helptags $HOME/.vim/pack/plugins/start/vim-terraform/doc" -c -q
fi
logk

logn 'Updating ~/.gitconfig...'
git config --global color.ui auto
git config --global browser.ch.cmd "open -a \"/Applications/Google Chrome.app\""
logk

logn 'Configure `screen` start-up to use a login shell...'
grep -q -F 'shell -$SHELL' $HOME/.screenrc || echo 'shell -$SHELL' >> $HOME/.screenrc
logk

# For the Chef setup you should have already downloaded your chef_user.pem to $HOME/.chef/
# To update $HOME/.chef/knife.rb please delete any existing knife.rb file and rerun Strap.

logn 'Setting up Chef...'
if [ ! -d "$HOME/git/chef-repo" ]; then
  git clone git@github.com:daptiv/chef-repo.git $HOME/git/chef-repo
fi

if [ ! -f $HOME/.chef/knife.rb ]; then
  knife configure --defaults -s https://manage.chef.io/organizations/daptiv -r $HOME/git/chef-repo
fi
logk

logn "Moving *.pem files from $HOME/Downloads/ to $HOME/.ssh/..."
count=`ls -1 *.pem 2>/dev/null | wc -l`
if [ $count != 0 ]; then
  mv $HOME/Downloads/*.pem $HOME/.ssh/
  chmod 444 $HOME/.ssh/*.pem
fi
logk

logn "Moving Chef encryption keys from $HOME/Downloads/ to $HOME/.chef/..."
mv $HOME/Downloads/encrypt* $HOME/.chef/ &>/dev/null
mv $HOME/Downloads/ops_encrypt* $HOME/.chef/ &>/dev/null
logk

logn 'Setting up bash prompt to be awesome...'
if [ ! -f $HOME/.git-prompt.bash ]; then
  cp -rf $HOME/.dotfiles/files/.git-prompt.bash $HOME/.git-prompt.bash
fi

if [ ! -f $HOME/.git-completion.bash ]; then
  wget -O $HOME/.git-completion.bash https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash
fi
logk

